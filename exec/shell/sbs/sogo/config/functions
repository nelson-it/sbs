. $certbasedir/config/functions
. $domainbasedir/config/functions
. $apachebasedir/config/functions

. $(dirname $BASH_SOURCE)/config

[ -e $sogoconfigdir ]    || mkdir -p $sogoconfigdir
[ -e $dovecotconfigdir ] || mkdir -p $dovecotconfigdir
[ -e $postfixconfigdir ] || mkdir -p $postfixconfigdir

# certcertdir certkeydir domaindn domain binddn bindpassword mailrelay mailrelayuser mailrelaypassword
function sogo_confprog()
{
  wrappermode=no;
  if [[ "$7" = *":465" ]]; then  wrappermode=yes; fi
  
  echo '/####CERTCERTDIR####/     { gsub(/####CERTCERTDIR####/,"'$1'"); }
        /####CERTKEYDIR####/      { gsub(/####CERTKEYDIR####/,"'$2'"); }
        /####HOST####/            { gsub(/####HOST####/,"'$(hostname)'"); }
        /####DOMAINDN####/        { gsub(/####DOMAINDN####/,"'$3'"); }
        /####DOMAIN####/          { gsub(/####DOMAIN####/,"'$4'"); }
        /####BINDDN####/          { gsub(/####BINDDN####/,"'$5'");  }      
        /####BINDPASSWORD####/    { gsub(/####BINDPASSWORD####/,"'$6'");  }      
        /####MAILRELAY####/       { gsub(/####MAILRELAY####/,"'$7'"); }
        /####MAILRELAYUSER####/   { gsub(/####MAILRELAYUSER####/,"'$8'"); }
        /####MAILRELAYPASSWD####/ { gsub(/####MAILRELAYPASSWD####/,"'$9'"); }
        /####LDAPHOST####/        { gsub(/####LDAPHOST####/,"'$ldaphost'"); }
        /####WRAPPERMODE####/     { gsub(/####WRAPPERMODE####/,"'$wrappermode'"); }
                                  { print $0 }'

}

# prog
function write_postfix()
{
   for dir in sasl ldap maps
   do
       mkdir -p           $postfixconfigdir/$dir >&$logfile 2>&$logfile
   done

    for file in main.cf master.cf ldap/aliases ldap/canonical ldap/mailbox_maps ldap/uid_maps sasl/passwd
    do
        template="$(findtemplate postfix $file)"
        awk "$1" < $template > $postfixconfigdir/$file
    done
    
    touch $postfixconfigdir/maps/aliases
    

    if [ -d $postfixconf ]; then
        find -type f $postfixconfigdir | while read file
        do 
            savefile $postfixconf/$file
            chgrp postfix $postfixconfigdir/$file
            chmod 640 $postfixconfigdir/$file
        done

        chmod 644 $postfixconfigdir/main.cf
    
        for dir in sasl ldap maps
        do
          chown root:postfix $postfixconfigdir/$dir >&$logfile 2>&$logfile
          chmod 750          $postfixconfigdir/$dir >&$logfile 2>&$logfile
          chmod g+s          $postfixconfigdir/$dir >&$logfile 2>&$logfile
        done

        ( cd $postfixconfigdir; tar -cf - . ) | ( cd $postfixconf; tar -xf - );
        postmap $postfixconf/sasl/passwd  >&$logfile 2>&$logfile
        postmap $postfixconf/maps/aliases >&$logfile 2>&$logfile

        systemctl restart postfix.service
    fi
}

# prog
function write_dovecot()
{
    mkdir -p        $dovecotconfigdir/conf.d 2>&$logfile >&$logfile
    chown root:root $dovecotconfigdir/conf.d 2>&$logfile >&$logfile
    chmod 755       $dovecotconfigdir/conf.d 2>&$logfile >&$logfile
       
    for file in dovecot-ldap.conf.ext conf.d/10-auth.conf  conf.d/10-master.conf  conf.d/10-ssl.conf  conf.d/15-mailboxes.conf
    do
        template="$(findtemplate dovecot $file)"
        awk "$1" < $template > $dovecotconfigdir/$file
    done

    if [ -d $dovecotconf ]; then
      find -type f $dovecotconfigdir | while read file
      do 
        savefile $dovecotconf/$file
        chgrp dovecot $dovecotconfigdir/$file
        chmod 640 $dovecotconfigdir/$file
      done
      
      ( cd $dovcotconfigdir; tar -cf - . ) | ( cd $dovecotconf; tar -xf - );

      mkdir -p /var/dovecot 2>&$logfile
      chown root:mail /var/dovecot
      chmod 770 /var/dovecot
      chmod g+s /var/dovecot

      systemctl restart dovecot.service
    fi
       
}

function write_apache()
{
  local port=$(get_port)
  local sport=$(get_sport)

  local prog='/####SOGOHOST####/  { gsub(/####SOGOHOST####/, "'$sogohost'");  }
                                  { print $0 }'

  template="$(findtemplate sogo site.conf)"
  site_writeconf "$(awk "$prog" < $template)" "$port" "$sport" "mne_sogo" "sogo" "sogo.$1" "" "" "$datadir"

  ln -s /etc/apache2/sites-available/sogo.conf /etc/apache2/sites-enabled >&$logfile 2>&$logfile
  apachectl graceful >&$logfile 2>&$logfile

}
